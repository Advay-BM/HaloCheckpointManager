#pragma once
#include "Invulnerability.h"
#include "OptionsState.h"

class Invulnerability::InvulnerabilityImplBase {
private:
	eventpp::CallbackList<void(bool&)>::Handle invulnerabilityToggleEventCallbackHandle;
public:
	InvulnerabilityImplBase()
	{
		invulnerabilityToggleEventCallbackHandle = OptionsState::invulnerabilityToggle.get()->valueChangedEvent.append([this](bool& b) {onInvulnToggle(b); }); 		// subscribe to option event
	}
	~InvulnerabilityImplBase()
	{
		if (invulnerabilityToggleEventCallbackHandle) 		// unsubscribe from option event
			OptionsState::invulnerabilityToggle.get()->valueChangedEvent.remove(invulnerabilityToggleEventCallbackHandle);
	}

	//interface
	virtual void onInvulnToggle(bool& b) = 0;
};

